\documentclass[nojss]{jss}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% GENERAL HINTS: STYLE OF THIS DOCUMENT
%
% See the according section in the Rnw file for the main tutorial!!!
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Add Revision Control System (RCS) Markups
\usepackage{ulem}      % use this for sout
\usepackage{hyperref}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{enumitem}
%\usepackage{fancyvrb}
\normalem              % set \emph to \textit again
% Additions (in blue)
\def\rcsadd#1{{\color{blue}#1}}
% Deletions (in red)
\def\rcsdel#1{{\color{red}\sout{#1}}}
% Yellow box (few words)
\def\rcsmark#1{\colorbox{yellow}{#1}}
%Yellow box (paragraph)
\def\rcscom#1{\noindent\newline\vspace*{0.5cm}\colorbox{yellow}{\parbox{\textwidth}{#1}}\vspace*{0.5cm}}


%% overwrite JSS definition of subsubsections
%% e.g., use numbering
\renewcommand{\jsssubsubsec}[2][default]{\vskip \preSskip%
  \pdfbookmark[3]{#1}{Subsubsection.\thesubsubsection.#1}%
  \refstepcounter{subsubsection}%
  {\large \thesubsubsection. #2} \nopagebreak
  \vskip \postSskip \nopagebreak}

%% overwrite JSS definitions of code sections
%% (make font smaller)
\DefineVerbatimEnvironment{Sinput}{Verbatim}{fontshape=sl, fontsize=\small}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{fontsize=\small}
\DefineVerbatimEnvironment{Scode}{Verbatim}{fontshape=sl, fontsize=\small}

\DefineVerbatimEnvironment{Code}{Verbatim}{fontsize=\small}
\DefineVerbatimEnvironment{CodeInput}{Verbatim}{fontshape=sl, fontsize=\small}
\DefineVerbatimEnvironment{CodeOutput}{Verbatim}{fontsize=\small}



%% needed for CRAN checking
%\VignetteIndexEntry{Substrate information in opm}


% authors, first page
\author{Lea A.I. Vaas\\Leibniz Institute DSMZ \And
        Johannes Sikorski\\Leibniz Institute DSMZ  \And
        Markus G\"{o}ker\\Leibniz Institute DSMZ}


% title, first page
\title{Working with substrate information in \pkg{opm}}


% authors, header on every 2nd page
\Plainauthor{L.A.I. Vaas, J. Sikorski, M. G\"{o}ker}


% main title, first page
\Plaintitle{Working with substrate information in opm}


% short title, header on every 2nd page
\Shorttitle{Substrates in \pkg{opm} (\today)}


\Abstract{

This is the substrate-information tutorial of \pkg{opm} in the version of \today{}.
The precomputed information on the known Phenotype Microarray (PM) substrates is explained, as well as the methods available to query this information.
IDs for a variety of databases are stored within \pkg{opm}, which can be used to conduct web queries to obtain comprehensive data on the substrates of interest.
We show how these data can be used to visualize results from PM experiments, including the outcome from advanced multiple-comparison statistics, within biochemical pathway maps.
Moreover, methods are described to automatically detect the substrate features that potentially explain a given experimental outcome.
This includes determining the relevant pathways to be used in the visualizations.
}

\Keywords{Respiration Kinetics, pathways, CAS, MeSH, ChEBI, Metacyc, KEGG, \pkg{pathview}}

\Plainkeywords{respiration kinetics, pathways, CAS, MeSH, ChEBI, Metacyc, KEGG, pathview}

\Address{
  Markus G\"{o}ker\\
  Leibniz Institute DSMZ -- German Collection of Microorganisms and Cell Cultures\\
  Braunschweig\\
  \\
  Telephone: +49/531-2616-272\\
  Fax: +49/531-2616-237\\
  E-mail: \email{markus.goeker@dsmz.de}\\
  URL: \url{www.dsmz.de}\\
}


%% this must be included if Sweave is used (with % symbols):
%% need no \usepackage{Sweave.sty}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}
% NOTE: Rstudio might insert a line '\SweaveOpts{concordance=TRUE}' after '\begin{document}', which is removed again by the build script, as it causes warning messages during R CMD check.
% So please don't try to rescue that line, and don't rely on it being there.


%% so far adding a TOC proved unsuccessful -- apparently the JSS style doesn't allow for a TOC
%\tableofcontents
%\newpage


\section{Introduction}\label{introduction}

A detailed description of the OmniLog\textregistered \ Phenotype MicroArray (PM) system, its measuring procedure and data characteristics are found in the vignette ``\pkg{opm}: An R Package for Analysing OmniLog\textregistered \ Phenotype MicroArray Data'' (called ``main tutorial'' in the following).
The description of the methods below presupposes that the user is familiar with the usage of \pkg{opm} and has studied the main tutorial as well as the entries of the \pkg{opm} manual relevant to her or his research.
Especially the concepts behind, and the methods available for, the different classes of \pkg{opm} objects should be known before starting with this tutorial. 

In addition to visual inspection or statistical comparative analyses of Phenotype Microarray data, as described in the main tutorial, users might be interested in specific information on the substrates used in PM assays.
The \pkg{opm} package contains a large variety of additional data on PM substrates. Beside methods for assessing these information directly, this tutorial introduces strategies for visualization of the measured PM results by mapping on pathway maps and introduces analysis methods for modelling and identification of informative and less informative substrates. 

\section{Preparation}\label{preparation}

<<label=chunk-setup, echo=FALSE>>=
options(width=90)
options(prompt = "R> ")
options(continue = "   ")
options(useFancyQuotes = FALSE)
library("methods")
@

For just downloading information from KEGG (see Section~\ref{plate-information}), install the \proglang{Bioconductor} package \pkg{KEGGREST}.
It needs not be loaded into your \proglang{R} session.
For also drawing PM information into KEGG pathway maps (see Section~\ref{vis-pathway}), install the \proglang{Bioconductor} package \pkg{pathview} and load it into your session. 
Note that it is important to load \pkg{pathview} before \pkg{opm}, which is needed throughout this tutorial, since otherwise some methods are not visible and the package does not work properly.
In this vignette this is enforced by optionally detaching \pkg{opm} and loading it again as follows:

<<label=load-library>>=
suppressPackageStartupMessages(library("pathview"))
if ("package:opm" %in% search())
  detach("package:opm")
library("opm")
data(vaas_et_al, package = "opmdata")
@



\section{Accessing plate and substrate information}\label{plate-substrate-information}

The \pkg{opm} package contains a number of functions suitable for accessing precomputed information on the substrates within certain wells and entire plates.

\subsection{Available plate information}\label{plate-information}

Currently substrate layouts of various plates are available within \pkg{opm}.
An overview of the plate types available in the respective version of \pkg{opm} is obtained by entering

<<label=plate-types, results=hide>>=
plate_type(full = TRUE)
@

The resulting vector of names does not only include OmniLog\textregistered \ plates; see the manual and the main tutorial for further details.
Using other values for \code{full}, or additional arguments, distinct spelling variants of the plate names can be obtained.

\subsection{Available substrate information}\label{subsub-information}

In the manual and help pages these functions are explained within the family ``naming-functions'' with according cross-references.

One usually would start a search by determining the exact spelling of an internally used name with \code{find\_substrate()}:

<<label=find-substrate-exact-substring, results=hide>>=
substrates <- find_substrate(c("Glutamine", "Glutamic acid"))
substrates
@

The results is a list (of the \proglang{S3} class ``substrate\_match'') containing character vectors with the results for each query name as values.
Surprisingly, nothing was found for ``Glutamic acid'' but several values for ``Glutamine''.
The default \code{search} argument is ``exact'', which is exact (case-sensitive) matching  of \textit{substrings} of the names.
One might want to use ``glob'' searching mode:

<<label=find-substrate-globbing-wrong, results=hide>>=
substrates <- find_substrate(c("L-Glutamine", "L-Glutamic acid"), "glob")
substrates
@

But with so-called wildcards, i.e. ``*'' for zero to many and ``?'' for a single arbitrary character the search is more flexible:

<<label=find-substrate-globbing-useful, results=hide>>=
substrates <- find_substrate(c("*L-Glutamine", "*L-Glutamic acid"), "glob")
substrates
@

This fetches all terms that end in either query character string, and does so case-insensitively.
Advanced users can apply the much more powerful ``regex'' and ``approx'' search modes; see the manual for details, entry \code{?find\_substrate}.

Note that \pkg{opm} appends a concentration (or just repetition) indicator as a number after a hash sign (``\#'') to the substrate names wherever necessary.
Thus a wildcard at the end of a name might often by the most useful search pattern.

Once the internally used names (which are not guaranteed to be stable between distinct \pkg{opm} releases) have been found, information on the substrates can be queried such as their occurrences and positions on plates:

<<label=find-positions, results=hide>>=
positions <- find_positions(substrates)
positions
@

This yields a nested list containing two-column matrices with plate names in the first and well coordinates in the second column.
References to external data resources for each substrate name can be obtained using \code{substrate\_info()}:

<<label=substrate-info, results=hide>>=
subst.info <- substrate_info(substrates)
subst.info
@

By default this yields CAS numbers (\url{http://www.cas.org/content/chemical-substances/faqs}), but MeSH names (useful for conducting PubMed queries; see \url{http://www.ncbi.nlm.nih.gov/mesh/}) \citep{Coletti01072001}, ChEBI IDs \citep{Hastings01012013}, KEGG compound IDs, KEGG drug IDs \citep{Kanehisa01012010} and MetaCyc IDs \citep{Caspi01012012} have also been collected for the majority of the substrates.
Using the ``browse'' argument, full URLs can be created and optionally also directly opened in the default web browser.
Using the ``download'' argument, if KEGG drug or compound IDs have been selected, these can be downloaded from the KEGG server if the \pkg{KEGGREST} is available and converted into customized objects.
It is possible to nicely display all available information at once:

<<label=substrate-all-info, results=hide>>=
subst.info <- substrate_info(substrates, "all")
subst.info
@

Another use of \code{substrate\_info()} is to convert substrate names to lower case but protecting name components such as abbreviations or chemical symbols.
See the manual for further details, help page \code{?substrate\_info}.


\section{Visualisation of PM information within pathway maps}\label{vis-pathway}

In conjunction with other \proglang{R} packages, it is possible to visualize PM results directly in pre-existing pathway maps as, for example, those from the KEGG database.
These maps are essentially manually drawn biochemical pathway maps representing the currently available knowledge on substrates, enzymes and genes and their connections within pathways. 
Depending on the availability of genome and gene-annotation information within KEGG, organism-specific, individual maps can be obtained \citep{Kanehisa01012010}.

The mapping itself works by using information produced by \pkg{opm} for a colour coding of the nodes (here, representing the substrates) within those maps, as can be done similarly with several other types of ``OMICS'' data such as transcriptomics or proteomics data.
For details, see the description on the KEGG website (\url{http://www.genome.jp/kegg/}).


\subsection{Providing suitable input data}\label{annotated-input}

% TODO LATER
% need a graphical overview of the workflow
% maybe connected to the existing one in the main tutorial?

The work flow starts with either an \code{OPMX} object containing the aggregated values or the result from an \proglang{opm\_mcp} analysis.
The first step in both cases is to convert the data into a suitable format, which is a named vector created by the function \code{annotated}.

<<label=annotated>>=
x <- annotated(vaas_1)
head(x)
@

The resulting vector contains the numeric values (selected parameter estimates or \code{opm\_mcp} results, as explained below) as well as an annotation of the according substrates. 
For substrates such as ``Positive Control'' or ``pH 5'' no KEGG ID is available, which results in \code{NA} values in the vector.
Accordingly, those substrates cannot be marked within pathway maps (see section~\ref{pathview-group}). 
The \code{what} argument, passed as eponymous argument to \code{substrate\_info}, selects the kind of information to be used for the annotation.

Although \code{annotated} works directly on \code{OPMX} objects containing aggregated data for single plates or bundles of plates, please note, that the output allows for only one value per substrate. 
Thus, when applying \code{annotated} to a set of plates, make sure that only one experimental group is comprised, since the resulting values are averaged per well over all plates in the input object.
Using the \code{output} argument, one can select the parameter of interest, for example area under the curve instead of maximum height:

<<label=annotated-param>>=
x <- annotated(vaas_1, output = param_names()[4])
head(x)
@

Visualization of the results of an \proglang{opm\_mcp} analysis is also possible, which offers more (statistically interesting) opportunities for making sense of the PM data in the context of pathways.
However, this method only makes sense if each coefficient estimated by \code{opm\_mcp} can be linked to a single substrate.
This is usually only possible for the ``Dunnett'' and ``Pairs'' type of contrasts if applied to the wells (see Section~\ref{pathview-group-diffs}).
See the main tutorial and the manual for details on this restriction.

The results from an \code{opm\_mcp} procedure are treated with \code{annotated} as shown before with an \code{OPMX} object, but additional options are available.
In the following example, first an ``opm\_glht'' object is generated from the \code{vaas\_4} exemplar object by performing a Dunnett-type multiple comparison among the selected 13 wells against well A05 as control group.

<<label=annotated-opm_glht-plot>>=
x <- opm_mcp(vaas_4[, , c(1:15)], 
output = "mcp", model = ~ Well,
  linfct = c(Dunnett.A05 = 1), full = FALSE)
@

The resulting 95\% confidence intervals for the difference of means are plotted in Figure~\ref{fig:opm_mcp_CI_plotII}.

\begin{center}
\begin{figure}
\scalebox{0.8}{
<<label=annotated-opm-glht-figure, fig=TRUE, echo=FALSE, width=8>>=
old.mar <- par(mar = c(3, 8, 3, 2)) # adapt plotting settings
plot(x)
par(old.mar) # reset plotting settings
@
}
\caption{
\label{fig:opm_mcp_CI_plotII}
Point estimates and 95\% confidence intervals in a manually defined comparison of group means for a specifically selected set of wells from the \code{vaas\_4} exemplar object. 
In this procedure each selected well is compared against A05. 
The picture was obtained by running \code{opm\_mcp()} and then the plotting function for the resulting ``opm\_glht'' object.
See the main tutorial for details.
}
\end{figure}
\end{center}

Using the above generated ``opm\_glht'' object, the options modifying the output of \code{annotated} will be illustrated.
Apparently only three comparisons exhibit a statistically significant difference, namely the comparisons A10 - A05, A11 - A05 and A12 - A05, all showing that the reactions A05 are weaker than those in A10, A11 and A12, respectively.

Using the \code{output} argument users are able to obtain various statistically relevant categorical results instead of the simple numerical output of the respective point estimator.
The options \code{upwards} and \code{downwards} result in a classification into three categories (\code{FALSE}, \code{NA}, or \code{TRUE}).
These indicate whether or not the cut-off (zero per default) is included in the confidence interval (\code{NA}) and thus a decision possible.
If not, the category indicates the direction of the shift relative to the cut-off.
The options \code{different}, \code{smaller}, \code{larger} and \code{equal} work similarly, but use only the two categories \code{TRUE} and \code{FALSE}.
Short-cuts are available for all options, enabling the user to set the cut-off together with the kind of output.
See the manual for details.

A comprehensive overview of the possible results is shown for object \code{x} in the following data frame:

<<label=annotated-opm_glht-options, echo=FALSE>>=
annotab <- c("numeric", "upwards", "downwards", "different", "equal", "smaller", "larger")
annotab <- mapply(output = annotab, annotated, MoreArgs = list(object = x), SIMPLIFY = FALSE)
annotab <- data.frame(Comparison = rownames(confint(x)$confint), annotab)
annotab
@

All these results are obtained with the setting \code{how = "ids"}; for the usage of \code{how = "value"} see Section ~\ref{finding-pathways}.


\subsection{Visualisation in pathway maps using pathview}\label{pathview}

\subsubsection{Visualisation of group means in pathway maps}\label{pathview-group}

Here we will use the function \code{pathview} from the package of the same name \citep{Luo2013}. 
This function can download a user-defined pathway graph from KEGG, optionally integrate additional data from other sources, and render the result.
For integrating experimental data from other ``OMICS'' approaches (such as transcriptomics and proteomics), see the corresponding chapter in the \pkg{pathview} vignette for details. 

Here the \code{pathview} function serves for integrating and visualizing information produced by \pkg{opm} and provided by \code{annotated}.
The user only has to specify the pathway and provide the \pkg{opm} data.
All other necessary steps (download of pathway graph data as XML file from KEGG, parsing of this data file, integrating user-defined data into the pathway representation, and rendering of final output graphics) are automatically conducted by \code{pathview}.
See the \pkg{pathview} vignette for technical details.

In the case of KEGG, a pathway map is described as ``a molecular interaction/reaction network diagram represented in terms of the KEGG Orthology (KO) groups'' (see \url{http://www.genome.jp/kegg/kegg3a.html} for further details).
KEGG contains a collection of distinct types of pathway maps identified by a code containing between two and four letters as a prefix, followed by five digits.

The prefixes have the following meanings:

\begin{itemize}[leftmargin=2cm]
\item[map -] Reference pathway
\item[ko -] Reference pathway (KO)
\item[ec -] Reference pathway (EC)
\item[rn -] Reference pathway (Reaction)
\item[\textit{org} -] Organism-specific pathway map (\textit{org} is a wild-card for the organism-specific abbreviation composed of two to four letters)
\end{itemize}

Only the first reference pathway map is drawn manually; all other maps are computationally generated. 
The \emph{ko}-maps contain the manually defined ortholog groups (\emph{ko} entries) for all proteins and functional RNAs that correspond to KEGG pathway nodes, BRITE hierarchy nodes, and KEGG module nodes, whereas the (\emph{ko} entries) are converted to gene identifiers if organism-specific pathways maps are generated.
A list of the existing maps and their corresponding numbers are available on the KEGG homepage (see above).

\code{pathview} allows only for using KEGG orthology (the \emph{ko} maps) or species-specific letter codes.
See \url{http://www.genome.jp/kegg/catalog/org_list.html} for an up-to-date list of organisms with complete genome information in KEGG.

A vector as returned by \code{annotated} (see Section~\ref{annotated-input}) serves as input for the visualization procedure based on \code{pathview}.
For demonstration purposes, we use subsets of \code{vaas_et_al} containing the \textit{Escherichia coli} strains from the first biological repetition. 

<<label=example-data>>=
e.coli.sub <- subset(vaas_et_al, list(Species = "Escherichia coli", 
  Experiment = "First replicate"))
e.coli.k12 <- subset(e.coli.sub, list(Strain = "DSM18039"))
e.coli.type <- subset(e.coli.sub, list(Strain = "DSM30083T"))
@

Afterwards we create the annotated vectors containing the average maximum curve heights for the two groups separately:

<<label=example-data-anno>>=
anno.k12 <- annotated(e.coli.k12)
anno.type <- annotated(e.coli.type)
@

For a more convenient drawing of \pkg{opm} data on KEGG pathway maps, we suggest a wrapper for the \code{pathview} function, providing other default settings for some arguments.
All graphics below are produced using this wrapper, but the user is of course free to use the original \code{pathview} function or write an alternative wrapper.

<<label=pathview-wrapper>>=
opm_path <- function(cpd.data, gene.data = NULL,
    high = list(gene = "green4", cpd = "blue"), 
    mid = list(gene = "lightsteelblue1", cpd = "yellow"),
    low = list(gene = "white", cpd = "yellow"),
    species = "ko", out.suffix = "non-native", 
    key.pos = "topright", afactor = 1000,
    limit = list(gene = 2, cpd = 400), 
    bins = list(gene = 0.5, cpd = 40),
    both.dirs = list(gene = FALSE, cpd = FALSE), 
    sign.pos = "topleft", cpd.lab.offset = 0, 
    same.layer = FALSE, 
    na.col = "white", ...) {
  pathview(cpd.data = cpd.data, gene.data = gene.data,
    high = high, mid = mid, low = low,
    species = species, out.suffix = out.suffix, key.pos = key.pos,
    afactor = afactor, limit = limit, bins = bins,
    both.dirs = both.dirs, sign.pos = sign.pos, 
    cpd.lab.offset = cpd.lab.offset, same.layer = same.layer, 
    na.col = na.col, ...)   
}
@

The data for the two strain are shown on the correspondingly separated maps in Figure~\ref{fig:pathview-native-sep-strains}.

<<label=pathview-wrapper-plot-native>>=
e.coli.map.k12 <- opm_path(cpd.data = anno.k12, species = "ko", 
  out.suffix = "k12.ko", pathway.id = "00052")
e.coli.map.type <- opm_path(cpd.data = anno.type, species = "ko", 
  out.suffix = "type.ko", pathway.id = "00052")
@

Note particularly the substrates Raffinose, Stachyose and Sucrose (in the middle of the map), which exhibit large respiratory differences, while Sorbitol (on the very left of the map) yields only small respiratory differences between the two strains.

\begin{figure}
 \centering
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[width=14cm,type=png,ext=.png,read=.png]{ko00052.k12.ko}}
                \caption{Respiratory data (mean maximum height) of \textit{Escherichia coli} strain K12 mapped on the KEGG Galactose pathway.}
                \label{fig:1a}
        \end{subfigure}
        \\
        \vspace{20pt}
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[width=14cm,type=png,ext=.png,read=.png]{ko00052.type.ko}}
                \caption{Respiratory data (mean maximum height) of \textit{Escherichia coli} type strain DSM 30083\textsuperscript{T} mapped on the KEGG Galactose pathway.}
                \label{fig:1b}
        \end{subfigure}
        \caption{
        \label{fig:pathview-native-sep-strains}
        Galactose metabolism pathway maps for the two \textit{E. coli} strains K12 and DSM 30083\textsuperscript{T} showing the mean maximum height on 13 substrates. 
        The quantitative measurement data are represented by according colours and mapped on the corresponding substrates (circles) in the graph. 
        }
\end{figure}


Using the default settings, \code{pathview} yields a raster image in PNG format, which is stored in the current working directory and shown in Figure~\ref{fig:pathview-native-sep-strains}.
For demonstration purposes the pathway with number ``00052'', which encodes for the Galactose metabolism pathway map, is chosen.
Genes (boxes) are annotated with KEGG ontology numbers (set by choosing \code{species = "ko"}), where available or, alternatively, with EC numbers. 
Note that the \code{species} arguments offers the possibility to use species-specific genome information available in the KEGG directory; see above for the letter codes.
The substrates (circles) in the maps get standard compound names, which are automatically retrieved from the CHEMBL database using the compound IDs. 

The data for the two strain can be shown analogously using the categorical output of \code{annotated}, see Figure~\ref{fig:pathview-cat-sep-strains}.

<<label=example-data-anno-bin>>=
anno.k12.bin <- annotated(e.coli.k12, output = param_names("disc.name"), lmap = 1:3)
anno.type.bin <- annotated(e.coli.type, output = param_names("disc.name"), lmap = 1:3)
@
The data for the two strain are shown on the correspondingly separated maps in Figure~\ref{fig:pathview-native-sep-strains}.

<<label=pathview-wrapper-plot-bin>>=
e.coli.map.k12.bin <- opm_path(cpd.data = anno.k12.bin, species = "ko", 
  out.suffix = "k12.ko.bin", pathway.id = "00052",
  limit = list(gene = 2, cpd = c(1,3)), bins = list(gene = 0.5, cpd = 3))
e.coli.map.type.bin <- opm_path(cpd.data = anno.type.bin, species = "ko", 
  out.suffix = "type.ko.bin", pathway.id = "00052",
  limit = list(gene = 2, cpd = c(1,3)), bins = list(gene = 0.5, cpd = 3))
@

\begin{figure}
 \centering
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[width=14cm,type=png,ext=.png,read=.png]{ko00052.k12.ko.bin}}
                \caption{Respiratory data (mean maximum height) in binary output of \textit{Escherichia coli} strain K12 mapped on the KEGG Galactose pathway.}
                \label{fig:1a}
        \end{subfigure}
        \\
        \vspace{20pt}
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[width=14cm,type=png,ext=.png,read=.png]{ko00052.type.ko.bin}}
                \caption{Respiratory data (mean maximum height) in binary output of \textit{Escherichia coli} type strain DSM 30083\textsuperscript{T} mapped on the KEGG Galactose pathway.}
                \label{fig:1b}
        \end{subfigure}
        \caption{
        \label{fig:pathview-native-sep-strains}
        Galactose metabolism pathway maps for the two \textit{E. coli} strains K12 and DSM 30083\textsuperscript{T} showing the mean maximum height on 13 substrates. 
        The quantitative measurement data are converted in binary output and represented by according colours and mapped on the corresponding substrates (circles) in the graph. 
        }
\end{figure}

Note that from the annotation objects \code{anno.k12} or \code{anno.type}, respectively, comprising 96 substrates, only 13 are represented in the shown pathway map in Figure~\ref{fig:pathview-native-sep-strains}.

Furthermore, rather than all substrates from a certain plate type are represented in a single pathway, but only certain substrate groups are represented in selected pathway maps.
By using the option \code{how = "value"}, \code{annotated} yields a numeric matrix with substrate names as row names and pathway identifiers as column names. 
Ones and zeros indicate whether or not a certain substrate (row) is contained in a certain pathway (column). 
\code{NA}s indicate that a substrate has no KEGG ID, as for example well A01 with substrate ``Negative Control''.

By summing up the columns and sorting the resulting vector, the user gets a ranking of the columns (pathways) indicating how many substrates are covered. 

<<label=anno_sum_mat_col>>=
anno.k12.mat <- annotated(e.coli.k12, how = "value")
col.sums <- sort(colSums(anno.k12.mat, na.rm = TRUE), decreasing = TRUE)
col.sums[1:10]
@

Further, the user can easily identify those substrates represented in a chosen pathway.
In the here shown example we search for the substrates represented in pathway number ``00052'', which is Galactose metabolism.

<<label=anno_sum_mat_ident>>=
e.subs <- rownames(anno.k12.mat)[!is.na(anno.k12.mat[, "map00052"]) &
  anno.k12.mat[, "map00052"] > 0]
e.subs
@

The user is also able to extract the positions of these substrates with \code{find\_positions}: 
<<label=e_coli_sub_pos>>=
e.subs.pos <- find_positions(e.subs, type = "Gen III")
e.subs.pos
@


\subsubsection{Visualisation of differences of group means in pathway maps}\label{pathview-group-diffs}

First, we show the maximum-height values from the thirteen substrates represented in the Galactose pathway map (number ``00052'') in Figure~\ref{fig:e_coli_single_ci} to demonstrate the sizes of their differences.
Note that the vector \code{e.subs.pos} contains the positions of the substrates of interest as a character string and thus can be used directly to subset \code{OPMX} objects.

<<label=ecoli_ci_plot, eval=FALSE>>=
ci_plot(e.coli.sub[, , e.subs.pos],
  as.labels = list("Species", "Strain"), subset = "A", x = "bottomright", 
  draw.legend = T, crr = 1.33)
@

\begin{center}
\begin{figure}
\scalebox{1.2}{
<<label=fig_e_coli_single_ci, fig=TRUE, echo=FALSE, height=14, width=20>>=
ci_plot(e.coli.sub[, , c(e.subs.pos)], 
  as.labels = list("Species", "Strain"), subset = "A", 
  x = "bottomright", 
  draw.legend = FALSE, crr = 1.5)
@
}
\caption{
\label{fig:e_coli_single_ci}
Point estimates and 95\% confidence intervals for the single maximum-height values of the two \textit{E. coli} strains for the subset of substrates represented in the Galactose pathway map.
}
\end{figure}
\end{center}

Straightforwardly, we compute a multiple comparison between only the 13 substrates included in the Galactose metabolism pathway map. 
Our example compares the type strain with K12; corresponding 95\% CIs for differences of means for the chosen substrates are shown in Figure~\ref{fig:e_coli_comp_ci}.

<<label=pathview-e_coli-comp>>=
colicomp <- opm_mcp(e.coli.sub[, , c(e.subs.pos)], 
  output = "mcp", model = ~ J(Well + Strain), linfct = c(`Pairs` = 1))
@

\begin{center}
\begin{figure}
\scalebox{1.1}{
<<label=e_coli_comp_ci_figure, fig=TRUE, echo=FALSE, width=12>>=
old.mar <- par(mar = c(3, 8, 3, 2))
par(mar = c(3, 40, 3, 2)) # adapt plotting settings
plot(colicomp, xlim = c(-10, 300))
par(old.mar) # reset plotting settings
@
}
\caption{
\label{fig:e_coli_comp_ci}
Point estimates and 95\% confidence intervals for the differences of means between the two \textit{E. coli} strains for the subset of substrates represented in the Galactose pathway map.
}
\end{figure}
\end{center}

The annotation vector for the differences of means can be obtained by simply applying \code{annotated} to the ``opm\_glht'' object. 
The direct mapping of these differences between the two strains on the Galactose pathway is shown in Figure~\ref{fig:pathview-native}.

<<label=pathview_e_coli_comp_map>>=
anno.colicomp <- annotated(colicomp)
e.coli.comp.map <- opm_path(cpd.data = anno.colicomp, species = "ko", 
  out.suffix = "e.coli.comp.ko", pathway.id = "00052")
@

\begin{figure}
\scalebox{1.225}{
\includegraphics[type=png,ext=.png,read=.png,page=1]{ko00052.e.coli.comp.ko}
}
\caption{\label{fig:pathview-native}
Respiration differences between \textit{E. coli} K12 and DSM 30083\textsuperscript{T} regarding the maximum-height values mapped on the Galactose pathway.  
}
\end{figure}


\subsubsection{Visualisation of binary data in pathway maps}\label{pathview-binary}
%TODO
% use the opm_mcp-results for also demonstrating the binary outcome option, use upwards or downwards to show the three categories
% explain the colour-arguments and the scaling properly

Continuing with the multiple comparison example, here it is shown how to incorporate categorical or binary data in pathway maps (see section~\ref{annotated-input}).
Analogously to the above shown examples , the function \code{annotated} can be used to provide categorical or binary annotation vectors for the differences of means.

<<label=pathview-cat-anno>>=
cat.comp.anno <- annotated(colicomp, output = "upwards", lmap = 1:3)
bin.comp.anno <- annotated(colicomp, output = "different", lmap = 1:3)
@

Since in this example data set all comparisons for substrates mappable in the Galactose pathway result in clear statistically significancies, we also show \rcsmark{TODO}

The direct mapping of these differences between the two strains on the Galactose pathway is shown in Figure~\ref{fig:pathview-native}.
<<label=pathview-cat-anno-map>>=
cat.coli.comp <- opm_path(cpd.data = cat.comp.anno, 
  species = "ko", out.suffix = "cat-coli-comp", pathway.id = "00052",
  limit = list(gene = 2, cpd = 2), bins = list(gene = 0.5, cpd = 3))
@

\begin{figure}
\scalebox{1.225}{
\includegraphics[type=png,ext=.png,read=.png,page=1]{ko00052.cat-coli-comp}
}
\caption{\label{fig:pathview-native}
Respiration differences between \textit{E. coli} K12 and DSM 30083\textsuperscript{T} regarding the maximum-height values mapped in binary format on the Galactose pathway.  
}
\end{figure}

\subsubsection{Visualisation of pathway maps in de-novo layout}\label{pathview-denovo-layout}
Further, the function generates a list containing two data frames.
The data frame ``plot.data.gene'' contains the data for mapping the genes and, analogously, ``plot.data.cpd'' stores the compound-related data.

<<label=pathview-wrapper-outob>>=
str(e.coli.map.k12)
@
% show the non-native KEGG-maps at the very end with listing the poor options for tuning the font sizes or size of symbols in the graphic
% also the colouring is not similarly possible like in the native maps


% explain the different situation of available information for analysis
% I. descriptive measurements:
% 		i) nothing known or genome known, pathway unknown
%		ii) only pathway known
%		iii) both genome and pathway known
% II. differential approach: comparison between two (or more strains)
% 		i) nothing known or genome known, pathway unknown
%		ii) only pathway known
%		iii) one or both genome and relevant pathway known
% 
% explain the different resulting experimental questions
% 	i) descriptive with following improvement of genome annotation)
% 	ii) differential with exploratory character: just describe the difference between strains
%	iii) differential with functional approach: knock-out experiments, investigations of cases where other experiments did not  result in satisfying answers (authismus-paper)
% 

%
%%TODO
%% update the discussion
%% avoid ALL unnecessary text


\section{Finding the pathways of interest}\label{finding-pathways}

%TODO
%As shown in section~/ref{} 
%sing the argument \code{how = "value"} a numeric matrix containing the chosen computed values together with their abundance in pathway maps can 
%be investigated. 
%%In analogy to the download argument of \code{substrate\_info} the information are converted into a numeric matrix.
%Please note, that this option is not available for all values of \code{what} and requires additional libraries. 
%See \code{substrate\_info} for details.
%%
%<<label=annotated-opm_glht-mat-dig, echo=FALSE, result=hide>>=
%old.op <- options()
%options(digits = 2)
%@
%
%<<label=annotated-opm_glht-mat>>=
%anno.glht.mat <- annotated(x, how = "values")
%anno.glht.mat
%@

The obtained information about the pathway certain substrates are involved in can be used to determine manually which pathways are actually of interest or can serve as input for model-building procedures as, for example, random forest approaches, which is demonstrated below.
%TODO rephrase sentence
\rcsmark{TODO}


\section[Acknowledgements]{Acknowledgements}
The integration of missing OmniLog\textregistered \ substrates into ChEBI by the ChEBI staff is gratefully acknowledged.
We are grateful to Barry Bochner (BIOLOG Inc.) for providing substrate and plate information on Phenotype MicroArray Essays.


\bibliography{opm}

\end{document}

